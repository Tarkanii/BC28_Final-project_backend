{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Project planner API docs",
    "description": "API documentation for 'Project planner'. [GitHub](https://github.com/Tarkanii/bc28_final-project_backend)"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://bc28_final-project_backend.herokuapp.com"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Projects",
      "description": "Projects endpoints"
    },
    {
      "name": "Sprints",
      "description": "Sprints endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["User"],
        "summary": "Logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "204": {
            "description": "No content, success operation",
            "content": {}
          },
          "400": {
            "description": "No token provided, bad request",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": ["User"],
        "summary": "Find user by email",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindUserByEmail"
                }
              }
            }
          },
          "409": {
            "description": "Invalid email / User not found",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get all projects",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Projects"],
        "summary": "Creating project",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Creating project object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCreatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          }
        }
      }
    },
    "/api/projects/{projectId}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get project by id",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Project not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Projects"],
        "summary": "Delete project",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Project is deleted",
            "content": {}
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Project not found",
            "content": {}
          }
        }
      }
    },
    "/api/projects/{projectId}/name": {
      "patch": {
        "tags": ["Projects"],
        "summary": "Update project title",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updating project title",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectNameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProjectNameResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing Name field",
            "content": {}
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Project not found",
            "content": {}
          }
        }
      }
    },
    "/api/projects/{projectId}/description": {
      "patch": {
        "tags": ["Projects"],
        "summary": "Update project description",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updating project description",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectDescriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProjectDescriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing Description field",
            "content": {}
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Project not found",
            "content": {}
          }
        }
      }
    },
    "/api/projects/{projectId}/participant": {
      "patch": {
        "tags": ["Projects"],
        "summary": "Add project participants",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Add project participants by email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProjectParticipantsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProjectParticipantsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing Description field",
            "content": {}
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Project not found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Projects"],
        "summary": "Remove participant",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Remove project participants by email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProjectParticipantsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Participant is removed",
            "content": {}
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Participant is not found",
            "content": {}
          }
        }
      }
    },
    "/api/sprints/{projectId}": {
      "post": {
        "tags": ["Sprints"],
        "summary": "Create sprint",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create sprint object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSprintRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sprint created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SprintCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Project id is not valid",
            "content": {}
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Sprints"],
        "summary": "Get all sprints",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSprintsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          }
        }
      }
    },
    "/api/sprints/{projectId}/{sprintId}/name": {
      "patch": {
        "tags": ["Sprints"],
        "summary": "Update sprint title",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "sprintId",
            "required": true,
            "description": "Sprint id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update sprint title",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSprintNameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sprint updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SprintCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing Name field",
            "content": {}
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Sprint is not found",
            "content": {}
          }
        }
      }
    },
    "/api/sprints/{projectId}/{sprintId}": {
      "get": {
        "tags": ["Sprints"],
        "summary": "Get sprint by id",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "sprintId",
            "required": true,
            "description": "Sprint id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sprint found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SprintCreatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Sprint is not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Sprints"],
        "summary": "Delete sprint",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "sprintId",
            "required": true,
            "description": "Sprint id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sprint deleted",
            "content": {}
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Sprint is not found",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/{projectId}/{sprintId}": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Creating task",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "description": "Project id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "sprintId",
            "required": true,
            "description": "Sprint id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "sprint or project id is not valid",
            "content": {}
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/{sprintId}/{taskId}/day={day}/value={value}": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update time spent on task during the day",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sprintId",
            "required": true,
            "description": "Sprint id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "description": "Task id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "day",
            "required": true,
            "description": "Date of the task",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "value",
            "required": true,
            "description": "Hours spents on the task",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Sprint id or task ID are not valid",
            "content": {}
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/{sprintId}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks of the sprint",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sprintId",
            "required": true,
            "description": "Sprint id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sprints found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Tasks are not found",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/{sprintId}/byday={day}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get tasks by day",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sprintId",
            "required": true,
            "description": "Sprint id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "day",
            "required": true,
            "description": "Date",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksByDayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Tasks are not found",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/{sprintId}/{taskId}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get task by id",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sprintId",
            "required": true,
            "description": "Sprint id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "description": "Task id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCreatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Sprint or task are not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete task",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sprintId",
            "required": true,
            "description": "Sprint id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "description": "Task id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted",
            "content": {}
          },
          "401": {
            "description": "Authorization token is missing",
            "content": {}
          },
          "404": {
            "description": "Task is not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignupRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name, guest by default",
            "example": "Anne"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "FindUserRequest": {
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "CreateProjectRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Project's title",
            "example": "React/NodeJs project"
          },
          "description": {
            "type": "string",
            "description": "Project's description",
            "example": "React/NodeJs project"
          }
        }
      },
      "UpdateProjectNameRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Project's title",
            "example": "Edited title"
          }
        }
      },
      "UpdateProjectDescriptionRequest": {
        "type": "object",
        "required": ["description"],
        "properties": {
          "description": {
            "type": "string",
            "description": "Project's description",
            "example": "Updated project description"
          }
        }
      },
      "AddProjectParticipantsRequest": {
        "type": "object",
        "required": ["participants"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "CreateSprintRequest": {
        "type": "object",
        "required": ["name", "start date", "duration"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Sprint title",
            "example": "Sprint 1"
          },
          "startDate": {
            "type": "string",
            "description": "Date of creation",
            "example": "2021-12-20"
          },
          "duration": {
            "type": "number",
            "description": "Sprint duration in days",
            "example": "7"
          }
        }
      },
      "UpdateSprintNameRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Sprint title",
            "example": "Edited sprint title"
          }
        }
      },
      "CreateTaskRequest": {
        "type": "object",
        "required": ["name", "scheduledTime"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Sprint title",
            "example": "Task 1"
          },
          "scheduledTime": {
            "type": "number",
            "description": "Hours planned for task",
            "example": "24"
          }
        }
      },
      "SignupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User's id",
                    "example": "507f1f77bcf86cd799439012"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Jack"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "Session's access token (needed for all requests)",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User's id",
                    "example": "507f1f77bcf86cd799439012"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Jack"
                  }
                }
              }
            }
          }
        }
      },
      "FindUserByEmail": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User's id",
                    "example": "507f1f77bcf86cd799439012"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Anne"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      },
      "GetCurrentUser": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "User's id",
                    "example": "507f1f77bcf86cd799439012"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Anne"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      },
      "ProjectSchema": {
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "description": "Project's participants' emails",
            "example": "[anne@mail.ru, jack@example.ru, patrick@wmail.ru]"
          },
          "name": {
            "type": "string",
            "description": "Project's name",
            "example": "React/NodeJs project"
          },
          "description": {
            "type": "string",
            "description": "Project's description",
            "example": "App project"
          },
          "owner": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name",
                "example": "Kate"
              },
              "_id": {
                "type": "string",
                "description": "Owner's id",
                "example": "507f1f77bcf86cd799439012"
              },
              "email": {
                "type": "string",
                "description": "Owner's email",
                "format": "email"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "description": "creation date",
            "example": "2021-01-01T09:59:55.633Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "update date",
            "example": "2021-01-01T09:59:55.633Z"
          },
          "id": {
            "type": "string",
            "description": "Project's id",
            "example": "507f1f77bcf86cd799439012"
          }
        }
      },
      "ProjectCreatedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "project": {
                "type": "object",
                "properties": {
                  "participants": {
                    "type": "array",
                    "description": "Project's participants' emails",
                    "example": "[anne@mail.ru, jack@example.com, kate@gmail.com]"
                  },
                  "name": {
                    "type": "string",
                    "description": "Project's name",
                    "example": "React/NodeJs project"
                  },
                  "description": {
                    "type": "string",
                    "description": "Project's description",
                    "example": "App project"
                  },
                  "owner": {
                    "type": "string",
                    "description": "Owner's id",
                    "example": "507f1f77bcf86cd799439012"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "creation date",
                    "example": "2021-01-01T09:59:55.633Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "update date",
                    "example": "2021-01-01T09:59:55.633Z"
                  },
                  "id": {
                    "type": "string",
                    "description": "Project's id",
                    "example": "507f1f77bcf86cd799439012"
                  }
                }
              }
            }
          }
        }
      },
      "GetProjectsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "projects": {
                "type": "array",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "success"
                  }
                },
                "description": "Array of user's projects",
                "items": {
                  "$ref": "#/components/schemas/ProjectSchema"
                }
              }
            }
          }
        }
      },
      "GetProjectResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "project": {
                "$ref": "#/components/schemas/ProjectSchema"
              }
            }
          }
        }
      },
      "UpdateProjectNameResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "project": {
            "type": "object",
            "properties": {
              "participants": {
                "type": "array",
                "description": "Project's participants' emails",
                "example": "[anne@mail.ru, jack@example.com, kate@gmail.com]"
              },
              "name": {
                "type": "string",
                "description": "Project's name",
                "example": "Edited title"
              },
              "description": {
                "type": "string",
                "description": "Project's description",
                "example": "App project"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name",
                    "example": "Kate"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Owner's id",
                    "example": "507f1f77bcf86cd799439012"
                  },
                  "email": {
                    "type": "string",
                    "description": "Owner's email",
                    "format": "email"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "description": "creation date",
                "example": "2021-01-01T01:59:55.633Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "update date",
                "example": "2021-01-01T01:59:55.633Z"
              },
              "id": {
                "type": "string",
                "description": "Project's id",
                "example": "507f1f77bcf86cd799439012"
              }
            }
          }
        }
      },
      "UpdateProjectDescriptionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "project": {
            "$ref": "#/components/schemas/ProjectSchema"
          }
        }
      },
      "AddProjectParticipantsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "project": {
            "$ref": "#/components/schemas/ProjectSchema"
          }
        }
      },
      "SprintSchema": {
        "type": "object",
        "properties": {
          "totalPlannedTime": {
            "type": "number",
            "description": "Whole time spent on task",
            "example": "6"
          },
          "name": {
            "type": "string",
            "description": "Sprint title",
            "example": "Sprint 1"
          },
          "startDate": {
            "type": "string",
            "description": "Creation date",
            "example": "2021-01-01"
          },
          "duration": {
            "type": "number",
            "description": "Sprint duration in days",
            "example": "4"
          },
          "project": {
            "type": "string",
            "description": "Project id",
            "example": "507f1f77bcf86cd799439012"
          },
          "endDate": {
            "type": "string",
            "description": "End of the sprint",
            "example": "2021-02-01"
          },
          "totalDaily": {
            "type": "array",
            "description": "array of task days",
            "items": {
              "type": "object",
              "description": "Task days and time",
              "example": {
                "2021-01-01": 0
              }
            },
            "example": [
              {
                "2021-01-01": 0
              },
              {
                "2021-01-02": 0
              },
              {
                "2021-01-03": 0
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "description": "creation date",
            "example": "2021-01-01T01:59:55.633Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "update date",
            "example": "2021-01-01T01:59:55.633Z"
          },
          "id": {
            "type": "string",
            "description": "Project's id",
            "example": "507f1f77bcf86cd799439012"
          }
        }
      },
      "SprintCreatedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "sprint": {
                "$ref": "#/components/schemas/SprintSchema"
              }
            }
          }
        }
      },
      "GetSprintsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "sprints": {
                "type": "array",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "success"
                  },
                  "code": {
                    "type": "number",
                    "example": 200
                  }
                },
                "description": "Array of user's sprints in one project",
                "items": {
                  "$ref": "#/components/schemas/SprintSchema"
                }
              }
            }
          }
        }
      },
      "TaskSchema": {
        "type": "object",
        "properties": {
          "totalTime": {
            "type": "number",
            "description": "Hours spent on task",
            "example": 0
          },
          "name": {
            "type": "string",
            "description": "Task title",
            "example": "Task"
          },
          "scheduledTime": {
            "type": "number",
            "description": "Hours to spend on task",
            "example": 8
          },
          "sprint": {
            "type": "string",
            "description": "Sprint id",
            "example": "507f1f99bcf86cd788539018"
          },
          "project": {
            "type": "string",
            "description": "Project id",
            "example": "507f1f77bcf86cd799439012"
          },
          "taskByDays": {
            "type": "array",
            "description": "task days and hours spent on",
            "items": {
              "type": "object",
              "description": "Task days and time",
              "example": {
                "2021-01-01": 0
              }
            },
            "example": [
              {
                "2021-01-01": 0
              },
              {
                "2021-02-01": 0
              },
              {
                "2021-02-01": 0
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "description": "creation date",
            "example": "2021-01-01T01:59:55.633Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "update date",
            "example": "2021-02-01T01:59:55.633Z"
          },
          "id": {
            "type": "string",
            "description": "Project's id",
            "example": "507f1f77bcf86cd799439012"
          }
        }
      },
      "TaskCreatedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "task": {
                "$ref": "#/components/schemas/TaskSchema"
              }
            }
          }
        }
      },
      "GetTasksByDayResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "tasks": {
                "type": "array",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "success"
                  },
                  "code": {
                    "type": "number",
                    "example": 200
                  }
                },
                "description": "Array of all tasks of the day",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Task title",
                      "example": "Task 1"
                    },
                    "totalTime": {
                      "type": "number",
                      "description": "Hours spent on task",
                      "example": 15
                    },
                    "scheduledTime": {
                      "type": "number",
                      "description": "Hours to spend on task",
                      "example": 24
                    },
                    "sprint": {
                      "type": "string",
                      "description": "Sprint id",
                      "example": "507f1f99bcf86cd788539018"
                    },
                    "project": {
                      "type": "string",
                      "description": "Project id",
                      "example": "507f1f77bcf86cd799439012"
                    },
                    "byDay": {
                      "type": "object",
                      "description": "Date and hours spent on task",
                      "example": {
                        "2021-07-04": 0
                      }
                    },
                    "id": {
                      "type": "string",
                      "description": "Project's id",
                      "example": "507f1f77bcf86cd799439012"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "GetTasksResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "number",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "tasks": {
                "type": "array",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "success"
                  },
                  "code": {
                    "type": "number",
                    "example": 200
                  }
                },
                "description": "Array of all sprint tasks",
                "items": {
                  "$ref": "#/components/schemas/TaskSchema"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
